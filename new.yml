mixed-port: 7890
# 本地混合代理(http和socks5合并）端口
allow-lan: true
# 允许局域网连接(false/true)
bind-address:
# 监听IP白名单（当allow-lan：true），只允许列表设备
  '*'
# 全部设备
# 192.168.122.11
# 单个ip4地址
# "[aaaa::a8aa:ff:fe09:57d8]"
# 单个ip6地址
mode: rule
# clash工作模式（rule/global/direct）
log-level: info
# 日志等级（info/warning/error/debug/silent）
ipv6: true
# IP6解析开关；如果为false，将返回ip6结果为空
external-controller: 127.0.0.1:9090
# 控制器监听地址
dns:
# DNS模块设置
  enable: true
# DNS开关(false/true)
  listen: 0.0.0.0:1053
# DNS监听地址
  ipv6: true
# IP6解析开关；如果为false，将返回ip6结果为空
  default-nameserver:
# 解析非IP的dns用的dns服务器,只支持纯IP
    - 223.5.5.5
    - 119.29.29.29
    - 114.114.114.114
  enhanced-mode: fake-ip
# DNS模式(redir-host/fake-ip)
  fake-ip-range: 198.18.0.1/16
# Fake-IP解析地址池
  fake-ip-filter:
# Fake-ip过滤，列表中的域名返回真实ip
    - '+.lan'
# Local Area Network
    - '+.stun.*.*'
# Stun Services
    - '+.stun.*.*.*'
    - '+.stun.*.*.*.*'
    - '+.stun.*.*.*.*.*'
    - 'lens.l.google.com'
# Google Voices
    - '*.n.n.srv.nintendo.net'
# Nintendo Switch
    - '+.stun.playstation.net'
# PlayStation
    - 'xbox.*.*.microsoft.com'
# XBox
    - '*.*.xboxlive.com'
# Microsoft
    - '*.msftncsi.com'
    - '*.msftconnecttest.com'
# Bilibili CDN
    - '*.mcdn.bilivideo.cn'
  nameserver:
# 默认DNS服务器，支持udp/tcp/dot/doh/doq
    - https://223.5.5.5/dns-query
    - https://1.12.12.12/dns-query

c: &c {type: http, behavior: classical, interval: 86400}

d: &d {type: http, behavior: domain, interval: 86400}
# 规则行为相关

p: &p {type: http, interval: 3600, health-check: {enable: true, url: http://cp.cloudflare.com/generate_204, interval: 300}}
# 远程订阅相关

g: &g {type: select, proxies: [Proxy, Auto, Fallback, HongKong, TaiWan, Singapore, Japan, America, DIRECT]}

m: &m {type: select, proxies: [DIRECT, Proxy, Auto, Fallback, HongKong, TaiWan, Singapore, Japan, America]}
# 代理组相关

proxies: # 本地服务器

u: &u {type: select, use: [MySubs]}
# 订阅引用相关

proxy-providers: # 远程订阅
  MySubs: &MySubs
    <<: *p
    url: "订阅"
    path: ./proxy_providers/mysubs.yaml
# 请使用Clash类型订阅链接填入引号""内使用

proxy-groups: # 策略组

# 节点切换
- {name: Proxy, <<: *g, proxies: [Auto,Fallback,HongKong,TaiWan,Singapore,Japan,America]}

# 自动选择
- {name: Auto, type: url-test, interval: 180, lazy: true, <<: *u, filter: '^(?=.*(.*))(?!.*((?i)回国|校园|教育|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|到期|过期|已用|联系|邮箱|工单|群|游戏|(\b(GAME|USE|USED|TOTAL|EXPIRE|EMAIL)\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$'}

# 故障转移
- {name: Fallback, type: fallback, <<: *u, filter: '^(?=.*(.*))(?!.*((?i)回国|校园|教育|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|到期|过期|已用|联系|邮箱|工单|游戏|群|(\b(GAME|USE|USED|TOTAL|EXPIRE|EMAIL)\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$'}

# 游戏平台
- {name: Games, <<: *g}

# 游戏
- {name: Gameplay, type: url-test, interval: 180, <<: *u, filter: '^(?=.*((?i)游戏|🎮|(\b(GAME)\b)))(?!.*((?i)回国|校园)).*$', proxies: [Proxy,DIRECT]}

# 国外网站
- {name: Global, <<: *g}

# 国内网站
- {name: Mainland, <<: *m}

# YouTube
- {name: YouTube, <<: *g}

# 声田音乐
- {name: Spotify, <<: *g}

# 网易云音乐
- {name: NetEaseMusic, <<: *m, proxies: [DIRECT]}

# 海外抖音
- {name: TikTok, <<: *g}

# 国际媒体
- {name: Streaming, <<: *g}

# 电报信息
- {name: Telegram, <<: *g}

# 苹果服务
- {name: Apple, <<: *m}

# 谷歌服务
- {name: Google, <<: *g}

# 微软服务
- {name: Microsoft, <<: *m}

# 香港节点
- {name: HongKong, type: url-test, interval: 300, lazy: true, <<: *u, filter: '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$'}

# 台湾节点
- {name: TaiWan, type: url-test, interval: 300, lazy: true, <<: *u, filter: '^(?=.*((?i)🇹🇼|🇨🇳|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$'}

# 狮城节点
- {name: Singapore, type: url-test, interval: 300, lazy: true, <<: *u, filter: '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$'}

# 日本节点
- {name: Japan, type: url-test, interval: 300, lazy: true, <<: *u, filter: '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$'}

# 美国节点
- {name: America, type: url-test, interval: 300, lazy: true, <<: *u, filter: '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$'}

# 漏网之鱼
- {name: Final, <<: *g, proxies: [Proxy,DIRECT]}

rule-providers: # 远程规则集

  OpenAI: # OpenAI
    <<: *d
    url: "https://rules.kr328.app/openai.yaml"
    path: ./ruleset/OpenAI.yaml

  YouTube: # 油管视频
    <<: *d
    url: "https://rules.kr328.app/youtube.yaml"
    path: ./ruleset/YouTube.yaml

  Spotify: # 声田音乐
    <<: *d
    url: "https://rules.kr328.app/spotify.yaml"
    path: ./ruleset/Spotify.yaml

  NetEaseMusic: # 网易云音乐
    <<: *c
    url: "https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/NetEaseMusic/NetEaseMusic.yaml"
    path: ./ruleset/NetEaseMusic.yaml

  TikTok: # 海外抖音
    <<: *d
    url: "https://rules.kr328.app/tiktok.yaml"
    path: ./ruleset/TikTok.yaml

  GlobalMedia_Domain: # 国际媒体
    <<: *d
    url: "https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Domain.yaml"
    path: ./ruleset/GlobalMedia_Domain.yaml

  Telegram: # 电报信息
    <<: *c
    url: "https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml"
    path: ./ruleset/Telegram.yaml

  GitHub: # GitHub
    <<: *d
    url: "https://rules.kr328.app/github.yaml"
    path: ./ruleset/GitHub.yaml

  Bing: # 必应搜索
    <<: *d
    url: "https://rules.kr328.app/bing.yaml"
    path: ./ruleset/Bing.yaml

  Twitter: # Twitter
    <<: *d
    url: "https://rules.kr328.app/twitter.yaml"
    path: ./ruleset/Twitter.yaml

  TestFlight: # TestFlight
    <<: *c
    url: "https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TestFlight/TestFlight.yaml"
    path: ./ruleset/TestFlight.yaml

  Apple: # 苹果服务
    <<: *d
    url: "https://rules.kr328.app/apple.yaml"
    path: ./ruleset/Apple.yaml

  Google: # 谷歌服务
    <<: *d
    url: "https://rules.kr328.app/google.yaml"
    path: ./ruleset/Google.yaml

  Microsoft: # 微软服务
    <<: *d
    url: "https://rules.kr328.app/microsoft.yaml"
    path: ./ruleset/Microsoft.yaml

  Games: # 游戏平台
    <<: *c
    url: "https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.yaml"
    path: ./ruleset/Games.yaml

  China_Domain: # 国内网站
    <<: *d
    url: "https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/China/China_Domain.yaml"
    path: ./ruleset/China_Domain.yaml

  Global_Domain: # 国外网站
    <<: *d
    url: "https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Global/Global_Domain.yaml"
    path: ./ruleset/Global_Domain.yaml

  Lan: # 局域网
    <<: *c
    url: "https://ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml"
    path: ./ruleset/Lan.yaml
    
    
  Advertising: # 去广告
    <<: *d
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Domain.yaml"
    path: ./ruleset/Advertising.yaml
        
  AdvertisingMiTV: # 去广告
    <<: *d
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Clash/AdvertisingMiTV/AdvertisingMiTV.yaml"
    path: ./ruleset/AdvertisingMiTV.yaml

rules: # 分流规则引用
  - RULE-SET,Advertising,REJECT
  - RULE-SET,AdvertisingMiTV,REJECT
  - DOMAIN-KEYWORD,hkspeedup,DIRECT
  - DOMAIN-KEYWORD,amazontrust,Gameplay
  - DOMAIN-KEYWORD,xbox,Gameplay
  - DOMAIN-KEYWORD,starrail,Gameplay
  - RULE-SET,OpenAI,Global
  - RULE-SET,YouTube,YouTube
  - RULE-SET,Spotify,Spotify
  - RULE-SET,NetEaseMusic,NetEaseMusic
  - RULE-SET,TikTok,TikTok
  - RULE-SET,GlobalMedia_Domain,Streaming
  - RULE-SET,Telegram,Telegram
  - RULE-SET,GitHub,Global
  - RULE-SET,Bing,Global
  - RULE-SET,Twitter,Global
  - RULE-SET,TestFlight,Global
  - RULE-SET,Apple,Apple
  - RULE-SET,Google,Google
  - RULE-SET,Microsoft,Microsoft
  - RULE-SET,Games,Games
  - RULE-SET,Global_Domain,Global
  - RULE-SET,China_Domain,Mainland
  - RULE-SET,Lan,DIRECT
  - GEOIP,CN,Mainland
  - MATCH,Final
